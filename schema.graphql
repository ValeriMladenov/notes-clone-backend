### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mutation {
  createDraft(content: String, title: String!): Note!
  deleteNote(id: Int!): Note
  signIn(email: String!, password: String!): AuthPayload!
  signUp(user: UserCreateInput): AuthPayload!
  updateNote(content: String!, id: Int!): Note
}

type Note {
  content: String
  createdAt: DateTime!
  deletedAt: DateTime
  id: Int!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
  user: User!
}

type Query {
  feed: [Note!]!
  loadUser: User
  note(id: Int): Note
}

type User {
  createdAt: DateTime!
  deletedAt: DateTime
  email: String!
  id: String!
  name: String
  notes: [Note!]!
  updatedAt: DateTime!
}

input UserCreateInput {
  email: String!
  name: String
  password: String!
  statusMessage: String
}

input UserUpdateInput {
  email: String
  name: String
  statusMessage: String
}
